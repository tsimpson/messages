{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component, Fragment } from 'react';\nimport axios from 'axios';\nimport Pusher from 'pusher-js';\n\nclass Chat extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      chats: []\n    });\n\n    _defineProperty(this, \"handleKeyUp\", evt => {\n      const value = evt.target.value;\n\n      if (evt.keyCode === 13 && !evt.shiftKey) {\n        const {\n          activeUser: user\n        } = this.props;\n        const chat = {\n          user,\n          message: value,\n          timestamp: +new Date()\n        };\n        evt.target.value = '';\n        axios.post('/message', chat);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\n      cluster: process.env.PUSHER_APP_CLUSTER,\n      useTLS: true\n    });\n    this.channel = this.pusher.subscribe('chat-room');\n    this.channel.bind('new-message', ({\n      chat = null\n    }) => {\n      const {\n        chats\n      } = this.state;\n      chat && chats.push(chat);\n      this.setState({\n        chats\n      });\n    });\n    this.pusher.connection.bind('connected', () => {\n      axios.post('/messages').then(response => {\n        const chats = response.data.messages;\n        this.setState({\n          chats\n        });\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.pusher.disconnect();\n  }\n\n  render() {\n    return this.props.activeUser && __jsx(Fragment, null, __jsx(\"div\", {\n      className: \"border-bottom border-gray w-100 d-flex align-items-center bg-white\",\n      style: {\n        height: 90\n      }\n    }, __jsx(\"h2\", {\n      className: \"text-dark mb-0 mx-4 px-2\"\n    }, this.props.activeUser)), __jsx(\"div\", {\n      className: \"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\",\n      style: {\n        minHeight: 90\n      }\n    }, __jsx(\"textarea\", {\n      className: \"form-control px-3 py-2\",\n      onKeyUp: this.handleKeyUp,\n      placeholder: \"Enter a message to chat..\",\n      style: {\n        resize: 'none'\n      }\n    })));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["C:\\Users\\Travis Simpson\\Desktop\\Travis Work\\Tutorials\\realtime_chat_app\\components\\Chat.js"],"names":["React","Component","Fragment","axios","Pusher","Chat","chats","evt","value","target","keyCode","shiftKey","activeUser","user","props","chat","message","timestamp","Date","post","componentDidMount","pusher","process","env","PUSHER_APP_KEY","cluster","PUSHER_APP_CLUSTER","useTLS","channel","subscribe","bind","state","push","setState","connection","then","response","data","messages","componentWillUnmount","disconnect","render","height","minHeight","handleKeyUp","resize"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAGA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;;AAAA,mCACnB;AAAEK,MAAAA,KAAK,EAAE;AAAT,KADmB;;AAAA,yCA8BbC,GAAG,IAAI;AACnB,YAAMC,KAAK,GAAGD,GAAG,CAACE,MAAJ,CAAWD,KAAzB;;AAEA,UAAGD,GAAG,CAACG,OAAJ,KAAgB,EAAhB,IAAsB,CAACH,GAAG,CAACI,QAA9B,EAAwC;AACtC,cAAM;AAACC,UAAAA,UAAU,EAAEC;AAAb,YAAsB,KAAKC,KAAjC;AACA,cAAMC,IAAI,GAAG;AAAEF,UAAAA,IAAF;AAAQG,UAAAA,OAAO,EAAER,KAAjB;AAAwBS,UAAAA,SAAS,EAAE,CAAC,IAAIC,IAAJ;AAApC,SAAb;AAEAX,QAAAA,GAAG,CAACE,MAAJ,CAAWD,KAAX,GAAmB,EAAnB;AACAL,QAAAA,KAAK,CAACgB,IAAN,CAAW,UAAX,EAAuBJ,IAAvB;AACD;AACF,KAxC0B;AAAA;;AAG3BK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,MAAL,GAAc,IAAIjB,MAAJ,CAAWkB,OAAO,CAACC,GAAR,CAAYC,cAAvB,EAAuC;AACnDC,MAAAA,OAAO,EAAEH,OAAO,CAACC,GAAR,CAAYG,kBAD8B;AAEnDC,MAAAA,MAAM,EAAE;AAF2C,KAAvC,CAAd;AAKA,SAAKC,OAAL,GAAe,KAAKP,MAAL,CAAYQ,SAAZ,CAAsB,WAAtB,CAAf;AAEA,SAAKD,OAAL,CAAaE,IAAb,CAAkB,aAAlB,EAAiC,CAAC;AAAEf,MAAAA,IAAI,GAAG;AAAT,KAAD,KAAqB;AACpD,YAAM;AAAET,QAAAA;AAAF,UAAY,KAAKyB,KAAvB;AACAhB,MAAAA,IAAI,IAAIT,KAAK,CAAC0B,IAAN,CAAWjB,IAAX,CAAR;AACA,WAAKkB,QAAL,CAAc;AAAE3B,QAAAA;AAAF,OAAd;AACD,KAJD;AAMA,SAAKe,MAAL,CAAYa,UAAZ,CAAuBJ,IAAvB,CAA4B,WAA5B,EAAyC,MAAM;AAC7C3B,MAAAA,KAAK,CAACgB,IAAN,CAAW,WAAX,EACGgB,IADH,CACQC,QAAQ,IAAI;AAChB,cAAM9B,KAAK,GAAG8B,QAAQ,CAACC,IAAT,CAAcC,QAA5B;AACA,aAAKL,QAAL,CAAc;AAAE3B,UAAAA;AAAF,SAAd;AACD,OAJH;AAKD,KAND;AAOD;;AAEDiC,EAAAA,oBAAoB,GAAG;AACrB,SAAKlB,MAAL,CAAYmB,UAAZ;AACD;;AAcDC,EAAAA,MAAM,GAAG;AACP,WAAQ,KAAK3B,KAAL,CAAWF,UAAX,IAAyB,MAAC,QAAD,QAC/B;AAAK,MAAA,SAAS,EAAC,oEAAf;AAAoF,MAAA,KAAK,EAAE;AAAE8B,QAAAA,MAAM,EAAC;AAAT;AAA3F,OACE;AAAI,MAAA,SAAS,EAAC;AAAd,OAA0C,KAAK5B,KAAL,CAAWF,UAArD,CADF,CAD+B,EAK/B;AAAK,MAAA,SAAS,EAAC,sEAAf;AAAsF,MAAA,KAAK,EAAE;AAAE+B,QAAAA,SAAS,EAAE;AAAb;AAA7F,OACE;AAAU,MAAA,SAAS,EAAC,wBAApB;AAA6C,MAAA,OAAO,EAAE,KAAKC,WAA3D;AAAwE,MAAA,WAAW,EAAC,2BAApF;AAAgH,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV;AAAvH,MADF,CAL+B,CAAjC;AASD;;AApD0B;;AAwD7B,eAAexC,IAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Pusher from 'pusher-js';\r\n\r\n\r\nclass Chat extends Component {\r\n  state = { chats: [] }\r\n\r\n  componentDidMount() {\r\n    this.pusher = new Pusher(process.env.PUSHER_APP_KEY, {\r\n      cluster: process.env.PUSHER_APP_CLUSTER,\r\n      useTLS: true\r\n    });\r\n\r\n    this.channel = this.pusher.subscribe('chat-room');\r\n\r\n    this.channel.bind('new-message', ({ chat = null }) => {\r\n      const { chats } = this.state;\r\n      chat && chats.push(chat);\r\n      this.setState({ chats });\r\n    });\r\n\r\n    this.pusher.connection.bind('connected', () => {\r\n      axios.post('/messages')\r\n        .then(response => {\r\n          const chats = response.data.messages;\r\n          this.setState({ chats });\r\n        });\r\n    });\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    this.pusher.disconnect();\r\n  }\r\n  \r\n  handleKeyUp = evt => {\r\n    const value = evt.target.value;\r\n    \r\n    if(evt.keyCode === 13 && !evt.shiftKey) {\r\n      const {activeUser: user } = this.props;\r\n      const chat = { user, message: value, timestamp: +new Date };\r\n      \r\n      evt.target.value = '';\r\n      axios.post('/message', chat);\r\n    }\r\n  }\r\n  \r\n  render() {\r\n    return (this.props.activeUser && <Fragment>\r\n      <div className=\"border-bottom border-gray w-100 d-flex align-items-center bg-white\" style={{ height:90 }}>\r\n        <h2 className=\"text-dark mb-0 mx-4 px-2\">{this.props.activeUser}</h2>\r\n      </div>\r\n  \r\n      <div className=\"border-top border-gray w-100 px-4 d-flex align-items-center bg-light\" style={{ minHeight: 90 }}>\r\n        <textarea className=\"form-control px-3 py-2\" onKeyUp={this.handleKeyUp} placeholder=\"Enter a message to chat..\" style={{ resize: 'none' }}></textarea>\r\n      </div>\r\n    </Fragment>)\r\n  }\r\n}\r\n\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}