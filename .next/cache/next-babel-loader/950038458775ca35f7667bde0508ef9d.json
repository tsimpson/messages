{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from '../components/Layout';\nimport Chat from '../components/Chat';\n\nclass IndexPage extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      user: null\n    });\n\n    _defineProperty(this, \"handleKeyUp\", evt => {\n      if (evt.keyCode === 13) {\n        const user = evt.target.value;\n        this.setState({\n          user\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      user\n    } = this.state;\n    const nameInputStyles = {\n      background: 'transparent',\n      color: '#999',\n      border: 0,\n      borderBottom: '1px solid #666',\n      borderRadius: 0,\n      fontSize: '3rem',\n      fontWeight: 500,\n      boxShadow: 'none !important'\n    };\n    return __jsx(Layout, {\n      pageTitle: \"Messages\"\n    }, __jsx(\"main\", {\n      className: \"container-fluid position-absolute h-100 bg-dark\"\n    }, __jsx(\"div\", {\n      className: \"row position-absolute w-100 h-100\"\n    }, __jsx(\"section\", {\n      className: \"col-md-8 d-flex flex-row flex-wrap align-items-center align-content-center px-5\"\n    }, __jsx(\"div\", {\n      className: \"px-5 mx-5\"\n    }, __jsx(\"span\", {\n      className: \"d-block w-100 h1 text-light\",\n      style: {\n        marginTop: -50\n      }\n    }, user ? __jsx(\"span\", null, __jsx(\"span\", {\n      style: {\n        color: '#999'\n      }\n    }, \"Hello!\"), \" \", user) : `What is your name?`), !user && __jsx(\"input\", {\n      type: \"text\",\n      className: \"form-control mt-3 px-3 py-2\",\n      onKeyUp: this.handleKeyUp,\n      autoComplete: \"off\",\n      style: nameInputStyles\n    }))), __jsx(\"section\", {\n      className: \"col-md-4 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\"\n    }, user && __jsx(Chat, {\n      activeUser: user\n    })))));\n  }\n\n}\n\nexport default (() => __jsx(IndexPage, null));","map":{"version":3,"sources":["C:\\Users\\Travis Simpson\\Desktop\\Travis Work\\Tutorials\\realtime_chat_app\\pages\\index.js"],"names":["React","Component","Layout","Chat","IndexPage","user","evt","keyCode","target","value","setState","render","state","nameInputStyles","background","color","border","borderBottom","borderRadius","fontSize","fontWeight","boxShadow","marginTop","handleKeyUp"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCAExB;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAFwB;;AAAA,yCAIlBC,GAAG,IAAI;AACnB,UAAIA,GAAG,CAACC,OAAJ,KAAgB,EAApB,EAAwB;AACtB,cAAMF,IAAI,GAAGC,GAAG,CAACE,MAAJ,CAAWC,KAAxB;AACA,aAAKC,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACD;AACF,KAT+B;AAAA;;AAWhCM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAW,KAAKO,KAAtB;AAEA,UAAMC,eAAe,GAAG;AACtBC,MAAAA,UAAU,EAAE,aADU;AAEtBC,MAAAA,KAAK,EAAE,MAFe;AAGtBC,MAAAA,MAAM,EAAE,CAHc;AAItBC,MAAAA,YAAY,EAAE,gBAJQ;AAKtBC,MAAAA,YAAY,EAAE,CALQ;AAMtBC,MAAAA,QAAQ,EAAE,MANY;AAOtBC,MAAAA,UAAU,EAAE,GAPU;AAQtBC,MAAAA,SAAS,EAAE;AARW,KAAxB;AAWA,WACE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB,OACE;AAAM,MAAA,SAAS,EAAC;AAAhB,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAS,MAAA,SAAS,EAAC;AAAnB,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAM,MAAA,SAAS,EAAC,6BAAhB;AAA8C,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAE,CAAC;AAAb;AAArD,OACMjB,IAAI,GAAI,oBACR;AAAM,MAAA,KAAK,EAAE;AAACU,QAAAA,KAAK,EAAE;AAAR;AAAb,gBADQ,OACqCV,IADrC,CAAJ,GAEQ,oBAHlB,CADF,EAMM,CAACA,IAAD,IAAS;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,6BAA7B;AAA2D,MAAA,OAAO,EAAE,KAAKkB,WAAzE;AAAsF,MAAA,YAAY,EAAC,KAAnG;AAAyG,MAAA,KAAK,EAAEV;AAAhH,MANf,CADF,CADF,EAWE;AAAS,MAAA,SAAS,EAAC;AAAnB,OAA+HR,IAAI,IAAI,MAAC,IAAD;AAAM,MAAA,UAAU,EAAEA;AAAlB,MAAvI,CAXF,CADF,CADF,CADF;AAmBD;;AA5C+B;;AA+ClC,gBAAe,MACb,MAAC,SAAD,OADF","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from '../components/Layout';\r\nimport Chat from '../components/Chat';\r\n\r\nclass IndexPage extends Component {\r\n  \r\n  state = { user: null }\r\n\r\n  handleKeyUp = evt => {\r\n    if (evt.keyCode === 13) {\r\n      const user = evt.target.value;\r\n      this.setState({ user });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { user } = this.state;\r\n\r\n    const nameInputStyles = {\r\n      background: 'transparent',\r\n      color: '#999',\r\n      border: 0,\r\n      borderBottom: '1px solid #666',\r\n      borderRadius: 0,\r\n      fontSize: '3rem',\r\n      fontWeight: 500,\r\n      boxShadow: 'none !important'\r\n    };\r\n\r\n    return (\r\n      <Layout pageTitle='Messages'>\r\n        <main className=\"container-fluid position-absolute h-100 bg-dark\">\r\n          <div className=\"row position-absolute w-100 h-100\">\r\n            <section className=\"col-md-8 d-flex flex-row flex-wrap align-items-center align-content-center px-5\">\r\n              <div className=\"px-5 mx-5\">\r\n                <span className=\"d-block w-100 h1 text-light\" style={{marginTop: -50}}>\r\n                    { user ? (<span>\r\n                      <span style={{color: '#999'}}>Hello!</span> {user}\r\n                      </span>) : `What is your name?`}\r\n                  </span>\r\n                  { !user && <input type=\"text\" className=\"form-control mt-3 px-3 py-2\" onKeyUp={this.handleKeyUp} autoComplete=\"off\" style={nameInputStyles} />}\r\n              </div>\r\n            </section>\r\n            <section className=\"col-md-4 position-relative d-flex flex-wrap h-100 align-items-start align-content-between bg-white px-0\">{ user && <Chat activeUser={user} /> }</section>\r\n          </div>\r\n        </main>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default () => (\r\n  <IndexPage />\r\n);"]},"metadata":{},"sourceType":"module"}